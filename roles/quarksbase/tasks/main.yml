---
# This playbook  deploys the quarkus

- name: Deploy template
  k8s:
    kubeconfig: "{{ kube_config.stdout }}"
    api_version: v1
    namespace: default
    definition:
      kind: Deployment
      metadata:
        name: quarkus-base
        annotations:
        labels:
          app.kubernetes.io/name: base
          helm.sh/chart: base-1.1.3
          app.kubernetes.io/instance: quarkus
          app: quarkus
          app.openshift.io/runtime: spring
      spec:
        replicas: 1
        selector:
          matchLabels:
            app.kubernetes.io/name: base
            app.kubernetes.io/instance: quarkus
        template:
          metadata:
            labels:
              app.kubernetes.io/name: base
              app.kubernetes.io/instance: quarkus
          spec:
            imagePullSecrets:
              - name: regcred
            containers:
              - name: base
                image: icr.io/quarkus/inventory-ms-quarkus
                imagePullPolicy: Always
                ports:
                  - name: http
                    containerPort: 8080
                    protocol: TCP
                livenessProbe:
                  httpGet:
                    path: /health
                    port: http
                readinessProbe:
                  httpGet:
                    path: /
                    port: http
                env:
                  - name: INGRESS_HOST
                    value: ""
                  - name: PROTOCOLS
                    value: ""
                  - name: LOG_LEVEL
                    value: debug
                  - name: INVENTORY_MYSQL_DB_HOST
                    value: inventory-mysql
                  - name: INVENTORY_MYSQL_DB_PORT
                    value: "3306"
                  - name: INVENTORY_MYSQL_DB_USERNAME
                    value: dbuser
                  - name: INVENTORY_MYSQL_DB_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: inventory-mysql
                        key: mysql-password
                  # - name: SONAR_URL
                  #   valueFrom:
                  #     secretKeyRef:
                  #       name: sonarqube-access
                  #       key: SONARQUBE_URL
                  # - name: SONARQUBE_SECURITY_TOKEN
                  #   valueFrom:
                  #     secretKeyRef:
                  #       name: sonarqube-access
                  #       key: SONARQUBE_TOKEN
                  # - name: JAEGER_AGENT_HOST
                  #   value: jaeger-all-in-one-inmemory-agent
                  # - name: JAEGER_AGENT_PORT
                  #   value: "6831"
                  # - name: JAEGER_SERVICE_NAME
                  #   value: inventory-ms-quarkus
                  # - name: JAEGER_SAMPLER_TYPE
                  #   value: const
                  # - name: JAEGER_SAMPLER_PARAM
                  #   value: "1"

- name: Create web service 
  k8s:
    kubeconfig: "{{ kube_config.stdout }}"
    api_version: v1
    namespace: default
    definition:
      kind: Service
      metadata:
        name: quarkus-base
      labels:
        app.kubernetes.io/name: base
        helm.sh/chart: base-1.1.3
        app.kubernetes.io/instance: quarkus
        app: quarkus
      spec:
        selector:
          app.kubernetes.io/name: base
          app.kubernetes.io/instance: quarkus
        ports:
          - port: 80
            targetPort: 8080
            protocol: TCP
            name: http
        type: ClusterIP 